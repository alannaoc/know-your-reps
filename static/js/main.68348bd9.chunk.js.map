{"version":3,"sources":["Components/Form.js","Components/Header.js","Components/Representatives.js","Components/SavedReps.js","Components/Main.js","Components/Footer.js","Components/firebase.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","react_default","a","createElement","action","onSubmit","handleSubmit","htmlFor","className","type","placeholder","onChange","handleChange","value","userPostalCode","pattern","required","name","onClick","handleClick","Header","user","displayName","savedReps","length","repsHandleClick","logout","login","Components_Form","Representatives","office","riding","party","phone","href","aria-hidden","email","url","personalUrl","SavedReps","Main","show","userReps","map","rep","key","Components_Representatives","saveButton","handleClickTop","showSaved","id","handleChangeSelect","selectedPostalCode","title","info","Components_SavedReps","event","removeButton","Footer","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","provider","auth","GoogleAuthProvider","setCustomParameters","prompt","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","signInWithPopup","then","result","userId","uid","initialFirebaseCall","setState","signOut","scroll","scrollMore","duration","delay","smooth","scrollToTop","database","ref","concat","on","response","newState","data","val","push","postalCode","forEach","item","code","onAuthStateChanged","checkUserList","repValue","state","findIndex","e","preventDefault","target","listCheck","review","Swal","fire","remove","console","log","axios","method","dataResponse","params","xmlToJSON","res","apiResult","representatives_centroid","test","dataArray","checkArray","finalArray","includes","repInfo","last_name","elected_office","district_name","party_name","offices","tel","personal_url","catch","error","toUpperCase","indexOf","replace","Components_Header","Components_Main","Components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.68348bd9.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Form = (props) => {\n    return (\n      <form action=\"submit\" onSubmit={props.handleSubmit} >\n        <fieldset>\n          <label htmlFor=\"postCode\">Enter a postal code to find local representatives:</label>\n\n          <input className=\"headerInput\" type=\"text\" placeholder=\"(e.g. A1A1A1)\" onChange={props.handleChange} value={props.userPostalCode} pattern=\"[A-Z][0-9][A-Z][0-9][A-Z][0-9]|[A-Z][0-9][A-Z] [0-9][A-Z][0-9]\" required name=\"postal\"/>\n\n          <button className=\"formSubmit headerInput\" type=\"submit\" onClick={props.handleClick}>Show me!</button>\n        </fieldset>  \n      </form>\n    )\n}\nexport default Form;","import React from 'react';\n\nimport Form from './Form.js';\n\nconst Header = (props) => {\n    return(\n      <div className='Header'>\n\n        <header>\n          {props.user ? <p className=\"userName\">Hi, {props.user.displayName}! \n            {props.savedReps.length > 0 ? <button onClick={props.repsHandleClick} className=\"button\">Click here to see your list of saved reps ({props.savedReps.length}).</button> : <span> You haven't saved any reps yet, start a new search to do so.</span>\n            }\n            </p> : null}\n          {props.user ? <button onClick={props.logout} className=\"login button\">Logout</button> : <button className=\"login button\" onClick={props.login}>Login</button>}\n          <div className=\"wrapper formHeader\">\n            <h1>Know Your Reps</h1>\n            \n            <Form handleSubmit={props.handleSubmit} handleChange={props.handleChange} userPostalCode={props.userPostalCode} handleClick={props.handleClick} />\n          </div>\n          \n        </header>\n      </div>\n    )\n}\nexport default Header;","import React from 'react';\n\n\nconst Representatives = (props) => {\n  return (\n    <div className=\"Representatives\">\n      <div className=\"repCard\">\n          <h2>{props.name}</h2>\n          <p className=\"riding\">{props.office}</p>\n          <p>{props.riding}</p>\n          <p>{props.party}</p>\n          <div className=\"repContact clearfix\">\n            {(props.phone) ?\n              (<a href={\"tel://\" + props.phone}><i className=\"fas fa-phone\" aria-hidden=\"true\"></i><span className=\"sr-only\">Call {props.name}</span>{props.phone}</a>) :\n              (<p>Phone number unavailable</p>)\n            }\n            {(props.email) ?\n              (<a href={\"mailto:\" + props.email}><i className=\"fas fa-envelope\" aria-hidden=\"true\"></i><span className=\"sr-only\">Email {props.name}</span>{props.email}</a>) :\n              (<p>Email unavailable</p>)\n            }\n            {(props.url) ?\n              (<a href={props.url} className=\"url\">Visit {props.name}'s website</a>) ||\n              (<a href={props.personalUrl} className=\"url\">Visit {props.name}'s website</a>) :\n              null\n            }\n          </div>\n        </div>\n\n      </div>\n  )\n}\nexport default Representatives;","import React from 'react';\n\n\nconst SavedReps = (props) => {\n    return(\n      <div className=\"Representatives savedRep\">\n        <div className=\"repCard\">\n          <h2>{props.name}</h2>\n          <p className=\"riding\">{props.office}</p>\n          <p>{props.riding}</p>\n          <p>{props.party}</p>\n          <div className=\"repContact clearfix\">\n            {(props.phone) ?\n              (<a href={\"tel://\" + props.phone}><i className=\"fas fa-phone\" aria-hidden=\"true\"></i><span className=\"sr-only\">Call {props.name}</span>{props.phone}</a>) :\n              (<p>Phone number unavailable</p>)\n            }\n            {(props.email) ?\n              (<a href={\"mailto:\" + props.email}><i className=\"fas fa-envelope\" aria-hidden=\"true\"></i><span className=\"sr-only\">Email {props.name}</span>{props.email}</a>) :\n              (<p>Email unavailable</p>)\n            }\n            {(props.url) ?\n              (<a href={props.url} className=\"url\">Visit {props.name}'s website</a>) ||\n              (<a href={props.personalUrl} className=\"url\">Visit {props.name}'s website</a>) :\n              null\n            }\n          </div>\n        </div>\n      </div>\n    )\n}\nexport default SavedReps;","import React from 'react';\nimport Representatives from './Representatives';\nimport SavedReps from './SavedReps.js';\n\nconst Main = (props) => {\n  return (\n    <main className=\"Main\">\n      <div className=\"wrapper\">\n        {props.show === true ?\n\n          <section>\n            <h2 className=\"titlePC\">Representatives for: {props.userPostalCode}</h2>\n            <ul className=\"repInfo\">\n              {props.userReps.map(rep => {\n                if (typeof rep !== 'string') {\n                  return (\n                    <li key={rep.key}>\n                      <Representatives\n                        name={rep.name}\n                        office={rep.office}\n                        riding={rep.riding}\n                        party={rep.party}\n                        email={rep.email}\n                        phone={rep.phone}\n                        url={rep.url}\n                        personalUrl={rep.personalUrl}\n                      />\n                    </li>)\n                }\n              })}\n            </ul>\n            {props.user ? <button className=\"button\" value={props.userPostalCode} onClick={props.saveButton}>Save reps for {props.userPostalCode}</button> : <button onClick={props.login} className=\"button\">Log in to save reps</button>}\n\n\n            {props.user && props.savedReps.length > 0 ? <button className=\"button\" onClick={props.repsHandleClick} >Show my saved reps</button> : null}\n            <button className=\"button\" onClick={props.handleClickTop}>Back to top</button>\n          </section>\n          : null\n        }\n\n\n        {props.user && props.savedReps.length > 0 && props.showSaved === true ?\n\n          <section className=\"savedRepsSection\">\n            <h2 className=\"titlePC\">My Saved Reps</h2>\n            <form>\n              <label htmlFor=\"savedRep\">Select a postal code to see saved reps:</label>\n              <select id=\"savedRep\" onChange={props.handleChangeSelect} value={props.selectedPostalCode} name=\"savedRep\">\n                <option value=\"\"></option>\n                {props.savedReps.map(rep => {\n                  return rep.title.map(info => {\n                    if (typeof info === \"string\") {\n                      return (\n                        <option value={info}>{info}</option>\n                      )\n                    }\n                  })\n                })}\n              </select>\n            </form>\n            <ul className=\"repInfo\">\n              {props.savedReps.map(rep => {\n                return rep.title.map(info => {\n                  if (info === props.selectedPostalCode) {\n                    {\n                      return rep.title.map(info => {\n                        if (typeof info === \"object\") {\n                          return (\n                            < li key={info.key} >\n                              <SavedReps\n                                name={info.name}\n                                office={info.office}\n                                riding={info.riding}\n                                party={info.party}\n                                email={info.email}\n                                phone={info.phone}\n                                url={info.url}\n                                personalUrl={info.personalUrl}\n                              />\n                            </li>\n                          )\n                        }\n                      })\n                    }\n                  }\n                })\n              })}\n            </ul>\n\n            {props.savedReps.map(rep => {\n              return rep.title.map(info => {\n                if (info === props.selectedPostalCode) {\n                  return (\n                    <button className=\"button\" onClick={(event) => props.removeButton(event)} id={rep.key}>\n                      Remove {props.selectedPostalCode} reps from MyReps</button>\n                  )\n                }\n              })\n            })}\n            <button className=\"button\" onClick={props.handleClickTop}>Back to top</button>\n\n          </section>\n          : null\n        }\n      </div>\n    </main>\n  )\n}\nexport default Main;","import React, {Component} from 'react';\n\n\nclass Footer extends Component {\n  render(){\n    return(\n      <div className=\"Footer\">\n        <footer>Know Your Reps | Data Provided by <a href=\"https://represent.opennorth.ca/\">Represent</a></footer>\n      </div>\n    )\n  }\n}\nexport default Footer;","import firebase from 'firebase';\n\n// Initialize Firebase\nvar config = {\n  apiKey: \"AIzaSyB35apiwRzurbwgK47HavC3uT4YUlkAHsM\",\n  authDomain: \"know-your-government-35104.firebaseapp.com\",\n  databaseURL: \"https://know-your-government-35104.firebaseio.com\",\n  projectId: \"know-your-government-35104\",\n  storageBucket: \"know-your-government-35104.appspot.com\",\n  messagingSenderId: \"690763001616\"\n};\nfirebase.initializeApp(config);\n\nexport default firebase;","import React, { Component } from 'react';\nimport './styles/App.css';\nimport Header from './Components/Header.js';\nimport Main from './Components/Main.js';\nimport Footer from './Components/Footer.js';\nimport { animateScroll as scroll } from \"react-scroll\";\nimport firebase from './Components/firebase.js';\nimport Swal from 'sweetalert2';\nimport axios from 'axios';\n\n//Google auth\nconst provider = new firebase.auth.GoogleAuthProvider()\nconst auth = firebase.auth()\n\nprovider.setCustomParameters({\n  prompt: \"select_account\"    // force google to ask which account to use\n})\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userReps: [],\n      savedReps: [],\n      selectedPostalCode: \"\",\n      userPostalCode: '',\n      show: false,\n      showSaved: false,\n      user: null,\n      userId: \"\",\n    }\n  }\n\n  login = () => {\n    auth.signInWithPopup(provider)\n      .then((result) => {\n        const user = result.user;\n        const userId = result.user.uid;\n      this.initialFirebaseCall(userId)\n        this.setState({\n          user: user,\n          userId: userId\n        });\n      });\n  }\n\n  \n\n  logout = () => {\n    auth.signOut()\n      .then(() => {\n        this.setState({\n          user: null,\n          showSaved: false\n        });\n      });\n  }\n\n  //function for smooth scroll to results\n  handleClick = () => {\n    scroll.scrollMore(700, {\n      duration: 2800,\n      delay: 200,\n      smooth: true\n    })\n\n  }\n\n  repsHandleClick = () => {\n    scroll.scrollMore(700, {\n      duration: 2800,\n      delay: 200,\n      smooth: true\n    })\n    this.setState({\n      showSaved: true\n    })\n  }\n\n  //function for smooth scroll to top of page\n  handleClickTop = () => {\n    scroll.scrollToTop({\n      duration: 2800,\n      delay: 200,\n      smooth: true\n    })\n  }\n\n  //firebase function to store saved results\n  initialFirebaseCall = (userId) => {\n\n  const dbref = firebase.database().ref(`${userId}`)\n\n    dbref.on('value', response => {\n      const newState = [];\n      const data = response.val();\n      for (let key in data) {\n        newState.push({\n          key: key,\n          title: data[key],\n        })\n      }\n      const postalCode = {};\n\n      newState.forEach(item => {\n        item.title.forEach(code => {\n          if (typeof code === \"string\")\n            postalCode.code = code;\n        })\n      })\n\n\n      this.setState({\n        savedReps: newState\n      })\n\n      \n      auth.onAuthStateChanged((user) => {\n        if (user) {   \n          this.setState({\n            user: user,\n            userId: user.uid\n          });\n        }\n      });\n\n    })\n  }\n\n  checkUserList = (repValue) => {\n\n    return this.state.savedReps.map(rep => {\n      return rep.title.findIndex((item) => {\n        return item === repValue;\n      })\n    })\n  }\n\n  //function to save user reps to firebase\n  saveButton = (e) => {\n    e.preventDefault();\n\n    const repValue = e.target.value\n    const listCheck = this.checkUserList(repValue)\n    const review = [];\n    const userId = this.state.userId;\n\n    listCheck.forEach(item => {\n      if (item !== -1) {\n        review.push(item)\n      }\n    })\n\n    if (this.state.userPostalCode.length < 6) {\n      Swal.fire(`Oops! The postal code you entered has been altered. Double check to ensure it's correct and try again.`)\n    }\n\n    else if (review.length > 0) {\n\n      Swal.fire(`Reps for ${this.state.userPostalCode} have already been saved. See your list!`)\n    }\n    else if (this.state.userReps) {\n      const dbRef = firebase.database().ref(`${userId}`);\n\n      dbRef.push(this.state.userReps);\n\n      Swal.fire(`Reps for ${this.state.userPostalCode} have been saved.`)\n\n    }\n  }\n\n  // function to remove user reps from firebase\n  removeButton = (e) => {\n    const userId = this.state.userId\n    const key = e.target.id\n    const dbRef = firebase.database().ref(`${userId}/${key}`);\n    dbRef.remove();\n\n  }\n\n  //function for axios call \n  handleSubmit = (e) => {\n    console.log(e)\n    e.preventDefault();\n    axios({\n      method: 'GET',\n      url: `https://proxy.junocollege.com/https://represent.opennorth.ca/postcodes/${this.state.userPostalCode}`,\n      dataResponse: 'json',\n      params: {\n        xmlToJSON: false,\n      }\n    }).then((res) => {\n\n      const apiResult = res.data.representatives_centroid;\n      const test = res.data.code;\n      const dataArray = [];\n      const checkArray = [];\n      const finalArray = [];\n\n      apiResult.forEach(rep => {\n        if (checkArray.includes(rep.name) === false) {\n          checkArray.push(rep.name);\n          dataArray.push(rep);\n        }\n      })\n      dataArray.forEach(rep => {\n        const key = rep.last_name;\n        const name = rep.name;\n        const office = rep.elected_office;\n        const riding = rep.district_name;\n        const party = rep.party_name;\n        const email = rep.email;\n        const phone = rep.offices[0].tel;\n        const url = rep.url;\n        const personalUrl = rep.personal_url;\n        const repInfo = { key, name, office, riding, party, email, phone, url, personalUrl };\n        finalArray.push(repInfo);\n      })\n\n      finalArray.push(test)\n\n      this.setState({\n        userReps: finalArray,\n        userPostalCode: test,\n        show: true,\n      })\n    })\n    .catch(function(error) {\n      Swal.fire(\"Sorry, looks like something went wrong on the server's side. Please try again soon!\")\n    })\n  }\n\n  //handle change converts the user's input from lower case to uppercase and removes any white spaces. \n  handleChange = (e) => {\n    e.target.value = e.target.value.toUpperCase();\n\n    if (e.target.value.indexOf(' ') >= 0) {\n      this.setState({\n        userPostalCode: e.target.value.replace(/\\s/g, '')\n      })\n    } else {\n      this.setState({\n        userPostalCode: e.target.value,\n      })\n    }\n\n  }\n\n  handleChangeSelect = (e) => {\n    this.setState({\n      selectedPostalCode: e.target.value\n    })\n  }\n\n  render() {\n    return (\n        <div className=\"App\">\n          <Header\n            handleSubmit={this.handleSubmit}\n            handleChange={this.handleChange}\n            userPostalCode={this.state.userPostalCode}\n            handleClick={this.handleClick}\n            repsHandleClick={this.repsHandleClick}\n            login={this.login}\n            user={this.state.user}\n            logout={this.logout}\n            savedReps={this.state.savedReps}\n          />\n\n          {(this.state.show === true || this.state.showSaved === true) ?\n            (<Main id=\"results\" \n              handleClickTop={this.handleClickTop} \n              userReps={this.state.userReps} \n              savedReps={this.state.savedReps} \n              handleClick={this.handleClick} \n              repsHandleClick={this.repsHandleClick}\n              handleChangeSelect={this.handleChangeSelect} \n              selectedPostalCode={this.state.selectedPostalCode} \n              userPostalCode={this.state.userPostalCode} \n              saveButton={this.saveButton} \n              removeButton={this.removeButton} \n              login={this.login} \n              user={this.state.user} \n              show={this.state.show}\n              showSaved={this.state.showSaved}\n            />) : (\n              null\n            )\n          }\n          <Footer />\n        </div>\n      \n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}